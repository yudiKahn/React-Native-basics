{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"D:\\\\Projects\\\\React Native Todo's\\\\components\\\\TaskInput.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\n\nfunction TaskInput(_ref) {\n  var addNewTask = _ref.addNewTask,\n      task = _ref.task,\n      setTask = _ref.setTask,\n      styles = _ref.styles;\n  return React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.container), {}, {\n      marginTop: 30\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }\n  }, React.createElement(Pressable, {\n    onPress: addNewTask,\n    style: styles.btn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  }, \"ADD\")), React.createElement(TextInput, {\n    placeholder: \"New Task\",\n    style: styles.input,\n    value: task,\n    onChangeText: function onChangeText(txt) {\n      return setTask(txt);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default TaskInput;","map":{"version":3,"sources":["D:/Projects/React Native Todo's/components/TaskInput.js"],"names":["React","TaskInput","addNewTask","task","setTask","styles","container","marginTop","btn","color","input","txt"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAGA,SAASC,SAAT,OAAwD;AAAA,MAApCC,UAAoC,QAApCA,UAAoC;AAAA,MAAxBC,IAAwB,QAAxBA,IAAwB;AAAA,MAAlBC,OAAkB,QAAlBA,OAAkB;AAAA,MAATC,MAAS,QAATA,MAAS;AAEpD,SAAQ,oBAAC,IAAD;AAAM,IAAA,KAAK,kCAAMA,MAAM,CAACC,SAAb;AAAwBC,MAAAA,SAAS,EAAC;AAAlC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJ,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAEL,UAApB;AAAgC,IAAA,KAAK,EAAEG,MAAM,CAACG,GAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAC;AAAP,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,CADI,EAIJ,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAC,UAAvB;AAAkC,IAAA,KAAK,EAAEJ,MAAM,CAACK,KAAhD;AAAuD,IAAA,KAAK,EAAEP,IAA9D;AAAoE,IAAA,YAAY,EAAE,sBAAAQ,GAAG;AAAA,aAAEP,OAAO,CAACO,GAAD,CAAT;AAAA,KAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJI,CAAR;AAMH;;AAED,eAAeV,SAAf","sourcesContent":["import React from 'react';\r\nimport {Pressable, Text, View, TextInput}  from 'react-native';\r\n\r\nfunction TaskInput({addNewTask, task, setTask, styles}) {\r\n\r\n    return (<View style={{...styles.container, marginTop:30}}>\r\n        <Pressable onPress={addNewTask} style={styles.btn}>\r\n            <Text style={{color:'white'}}>ADD</Text>\r\n        </Pressable>\r\n        <TextInput placeholder=\"New Task\" style={styles.input} value={task} onChangeText={txt=>setTask(txt)}/>\r\n    </View>)\r\n}\r\n\r\nexport default TaskInput;"]},"metadata":{},"sourceType":"module"}